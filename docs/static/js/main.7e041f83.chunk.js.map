{"version":3,"sources":["components/AddCategorie.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategorie","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","toUpperCase","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAuBeA,EArBM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACJC,mBAAS,IADL,mBACjCC,EADiC,KACrBC,EADqB,KAYxC,OACI,sBAAMC,SARW,SAAAC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAIlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAZpB,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAClDH,GAFe,+DAIDI,MAAMF,GAJL,cAIbG,EAJa,gBAKIA,EAAIC,OALR,uBAKXC,EALW,EAKXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDCWLO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC1B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCkBDO,EApBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAAAA,GAAa,IAAD,EACVd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAcpC,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAEGqB,EDZ2BK,CAAa1B,GAAvCoB,EADsB,EACtBA,QAAeP,EADO,EACbN,KAEjB,OACI,qCACI,oBAAIS,UAAU,gDAAd,SACKhB,EAAS2B,gBAEbP,GAAW,mBAAGJ,UAAU,+CAAb,wBACZ,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEK3BiB,EAhBO,WAAO,IAAD,EACY1C,mBAAS,IADrB,mBACjB2C,EADiB,KACL5C,EADK,KAExB,OACI,qCACI,+CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBACA,6BACK4C,EAAWpB,KAAI,SAAAT,GACZ,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCRzC8B,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.7e041f83.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst AddCategorie = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length >= 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n        </form>\r\n    );\r\n};\r\nAddCategorie.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};\r\nexport default AddCategorie;\r\n","export const getGifs = async category => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n        category\r\n    )}&limit=10&api_key=A8X7RVSMQtjW8Fcv9w0DfrmStnM6IwFi`;\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        };\r\n    });\r\n    return gifs;\r\n};\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\nconst GifGrid = ({ category }) => {\r\n    const { loading, data: images } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"text-center animate__animated animate__fadeIn\">\r\n                {category.toUpperCase()}\r\n            </h3>\r\n            {loading && <p className=\"text-center animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map(img => (\r\n                    <GifGridItem key={img.id} {...img} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n};\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = category => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false,\r\n            });\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategorie from './components/AddCategorie';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategorie setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {categories.map(category => {\r\n                    return <GifGrid key={category} category={category} />;\r\n                })}\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GiftExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(<GiftExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}